// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Other
}
// This model represents a patient in the healthcare system.
// It includes fields for authentication and a one-to-one relationship with the PatientProfile model.
model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String?
  role     Role     @default(PATIENT)
  profileSetup Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  // Relations
  doctorProfile   DoctorProfile? @relation("DoctorToDoctorProfile")
  patientProfile  PatientProfile? @relation("PatientToPatientProfile")
}

enum Role {
  PATIENT
  DOCTOR
}

model PatientProfile {
  id                     String    @id @default(cuid())
  gender                 Gender    @default(Male)
  phone                  String    @unique
  imageUrl               String?
  address                String?
  dob                    DateTime?
  bloodGroup             String?
  emergencyContactNumber String?
  medicalHistory         String?
  currentMedications     String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  patientId String  @unique
  patient   User    @relation("PatientToPatientProfile", fields: [patientId], references: [id])
}

model DoctorProfile {
  id             String    @id @default(cuid())
  phone          String    @unique
  imageUrl       String?
  address        String?
  specialization String?
  experience     Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  doctorId String  @unique
  doctor   User    @relation("DoctorToDoctorProfile", fields: [doctorId], references: [id])
}